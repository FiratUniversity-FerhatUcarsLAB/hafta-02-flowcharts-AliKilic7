digraph ATM_Withdraw_Fixed {
    rankdir=TB;
    node [fontname="Arial", fontsize=10, style=filled, fillcolor=white];

    // Nodes
    start [shape=oval, label="BASLA"];
    init_vars [shape=box, label="init:\npinHak <- 0\nMAX_PIN_HAK <- 3\npinDogru <- false\"\nhesapBakiyesi <- 2500\ngunlukLimit <- 1000\ngunlukKullanilan <- 0"];
    pin_input [shape=parallelogram, label="PIN gir"];
    pin_check [shape=diamond, label="PIN doğru mu?"];
    pin_increment [shape=box, label="pinHak <- pinHak + 1"];
    pin_try [shape=diamond, label="pinHak >= MAX_PIN_HAK?"];
    card_block [shape=parallelogram, label="Kart bloke edildi\nKart yutuldu\nKartı geri almak için şubeye gidiniz"];
    balance_display [shape=parallelogram, label="Bakiye ve limit goster"];
    amount_input [shape=parallelogram, label="Cekilecek tutari gir"];
    valid_amount [shape=diamond, label="Tutar 20 TL kati mi?"];
    valid_limit [shape=diamond, label="Gunluk limit asilir mi?"];
    valid_balance [shape=diamond, label="Yeterli bakiye var mi?"];
    confirm [shape=parallelogram, label="Onayla (E/H)"];
    approved [shape=diamond, label="Onay = E mi?"];
    withdraw [shape=box, label="Bakiye ve limit guncelle\nPara ver"];
    show_new_balance [shape=parallelogram, label="Yeni bakiye goster"];
    retry [shape=parallelogram, label="Baska islem? (E/H)"];
    retry_check [shape=diamond, label="Cevap = E mi?"];
    end [shape=oval, label="BITIR"];

    // Flow
    start -> init_vars;
    init_vars -> pin_input;

    pin_input -> pin_check;
    pin_check -> balance_display [label="Evet"];
    pin_check -> pin_increment [label="Hayir"];

    // Increment then check attempts
    pin_increment -> pin_try;
    pin_try -> card_block [label="Evet"];
    pin_try -> pin_input [label="Hayir"];
    card_block -> end;

    // Main loop
    balance_display -> amount_input;
    amount_input -> valid_amount;
    valid_amount -> valid_limit [label="Evet"];
    valid_amount -> amount_input [label="Hayir"];
    valid_limit -> valid_balance [label="Hayir"];
    valid_limit -> amount_input [label="Evet"];
    valid_balance -> confirm [label="Evet"];
    valid_balance -> amount_input [label="Hayir"];
    confirm -> approved;
    approved -> withdraw [label="Evet"];
    approved -> retry [label="Hayir"];
    withdraw -> show_new_balance;
    show_new_balance -> retry;
    retry -> retry_check;
    retry_check -> amount_input [label="Evet"];
    retry_check -> end [label="Hayir"];
}
